#!/bin/bash
# Author: Egor Pomortsev <illicium@nonlogic.org>
# Description: Allows/disallows user IRC access
#
# Copyright (c) 2008 Nonlogic - For use under the terms of the GNU GPLv3.

# Displays information on how to use this program and then exits.  This is used
# when there is an error in the users input into the program.
function show_usage
{
	echo "Usage: $0 [-a] [-d] USER" 
	echo "  Allow or disallow user IRC access"
	exit 1
}

# This command must be ran through sudo (original user not root)
if [ -z "$SUDO_USER" ]; then
    echo "$0: This program must be ran through sudo."
    echo
    show_usage
fi

if [ "$SUDO_USER" == "root" ]; then
    echo "$0: Root cannot run this program through sudo."
    echo
    show_usage
fi

# Include /etc/nonlogic.conf
if [ ! -x /etc/nonlogic.conf ]; then
        echo "$0: Could not find '/etc/nonlogic.conf', check if file exists and has proper permissions."
        echo
        show_usage
fi

source /etc/nonlogic.conf

# Parse command line arguments
until [ -z "$1" ]; do
	case $1 in
		-a )
            ALLOW=1
			shift
            USERNAME=$1
		;;
		-d )
            DISALLOW=1
            shift
            USERNAME=$1
		;;
		-* )
			show_usage 
		;;
	esac

	shift
done

if [ -z "$USERNAME" ]; then
	echo "$0: no username given."
	echo
	show_usage
fi

# Check if user exists
if [ -z "`id -un $USERNAME 2> /dev/null`" ]; then
	echo "$0: the user '$USERNAME' does not exist."
    echo
    show_usage
fi

if [ "$ALLOW" == "1" ]; then
    # Add user to irc group
    /root/tools/nlgpasswd -a $USERNAME $IRC_GROUP 
    # Update iptables
    /sbin/iptables -A $IRC_CHAIN -m owner --uid-owner $USERNAME -j ACCEPT
    exit
fi

if [ "$ALLOW" == "1" ]; then
    # Remove user from irc group
    /root/tools/nlgpasswd -d $USERNAME $IRC_GROUP 
    # Update iptables
    /sbin/iptables -D $IRC_CHAIN -m owner --uid-owner $USERNAME -j ACCEPT
    exit
fi

echo "$0: no operation given."
echo
show_usage

